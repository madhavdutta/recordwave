import jsPDF from 'jspdf'

export const generatePDF = (transcript) => {
  const doc = new jsPDF()
  
  // Set up the document
  const pageWidth = doc.internal.pageSize.getWidth()
  const pageHeight = doc.internal.pageSize.getHeight()
  const margin = 20
  const maxWidth = pageWidth - (margin * 2)
  
  // Header
  doc.setFontSize(20)
  doc.setFont('helvetica', 'bold')
  doc.text('Screen Recording Transcript', margin, 30)
  
  // Date and time
  doc.setFontSize(12)
  doc.setFont('helvetica', 'normal')
  const now = new Date()
  const dateStr = now.toLocaleDateString() + ' ' + now.toLocaleTimeString()
  doc.text(`Generated on: ${dateStr}`, margin, 45)
  
  // Separator line
  doc.setLineWidth(0.5)
  doc.line(margin, 55, pageWidth - margin, 55)
  
  // Content
  doc.setFontSize(11)
  doc.setFont('helvetica', 'normal')
  
  if (!transcript || transcript.trim() === '') {
    doc.text('No transcript content available.', margin, 70)
  } else {
    // Split transcript into paragraphs and wrap text
    const paragraphs = transcript.split('\n').filter(p => p.trim() !== '')
    let yPosition = 70
    
    paragraphs.forEach((paragraph, index) => {
      if (paragraph.trim() === '') return
      
      // Wrap text to fit page width
      const lines = doc.splitTextToSize(paragraph.trim(), maxWidth)
      
      // Check if we need a new page
      if (yPosition + (lines.length * 6) > pageHeight - margin) {
        doc.addPage()
        yPosition = margin
      }
      
      // Add paragraph
      lines.forEach((line, lineIndex) => {
        doc.text(line, margin, yPosition)
        yPosition += 6
      })
      
      // Add space between paragraphs
      yPosition += 4
    })
  }
  
  // Footer
  const totalPages = doc.internal.getNumberOfPages()
  for (let i = 1; i <= totalPages; i++) {
    doc.setPage(i)
    doc.setFontSize(10)
    doc.setFont('helvetica', 'normal')
    doc.text(
      `Page ${i} of ${totalPages}`,
      pageWidth - margin - 30,
      pageHeight - 10
    )
    doc.text(
      'Generated by RecordCraft',
      margin,
      pageHeight - 10
    )
  }
  
  // Generate filename with timestamp
  const timestamp = now.toISOString().slice(0, 19).replace(/:/g, '-')
  const filename = `transcript-${timestamp}.pdf`
  
  // Save the PDF
  doc.save(filename)
}
